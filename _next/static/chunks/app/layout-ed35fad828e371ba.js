(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[177],{347:()=>{},1576:(e,n,t)=>{Promise.resolve().then(t.t.bind(t,2093,23)),Promise.resolve().then(t.t.bind(t,7735,23)),Promise.resolve().then(t.t.bind(t,347,23)),Promise.resolve().then(t.bind(t,1947))},1947:(e,n,t)=>{"use strict";t.d(n,{default:()=>v});var o=t(5155),r=t(2115),a=t(942),i=t(7558),l=t(3264);let s=e=>{let n=e.replace("#",""),t=parseInt(n.slice(0,2),16)/255;return[t,parseInt(n.slice(2,4),16)/255,parseInt(n.slice(4,6),16)/255]},u=(0,r.forwardRef)(function(e,n){let{uniforms:t}=e,{viewport:i}=(0,a.C)();return(0,r.useLayoutEffect)(()=>{n.current&&n.current.scale.set(i.width,i.height,1)},[n,i]),(0,a.D)((e,t)=>{if(n.current){let e=n.current.material;e.uniforms.uTime.value+=.1*t}}),(0,o.jsxs)("mesh",{ref:n,children:[(0,o.jsx)("planeGeometry",{args:[1,1,1,1]}),(0,o.jsx)("shaderMaterial",{uniforms:t,vertexShader:"\nvarying vec2 vUv;\nvarying vec3 vPosition;\n\nvoid main() {\n  vPosition = position;\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader:"\nvarying vec2 vUv;\nvarying vec3 vPosition;\n\nuniform float uTime;\nuniform vec3  uColor;\nuniform float uSpeed;\nuniform float uScale;\nuniform float uRotation;\nuniform float uNoiseIntensity;\n\nconst float e = 2.71828182845904523536;\n\nfloat noise(vec2 texCoord) {\n  float G = e;\n  vec2  r = (G * sin(G * texCoord));\n  return fract(r.x * r.y * (1.0 + texCoord.x));\n}\n\nvec2 rotateUvs(vec2 uv, float angle) {\n  float c = cos(angle);\n  float s = sin(angle);\n  mat2  rot = mat2(c, -s, s, c);\n  return rot * uv;\n}\n\nvoid main() {\n  float rnd        = noise(gl_FragCoord.xy);\n  vec2  uv         = rotateUvs(vUv * uScale, uRotation);\n  vec2  tex        = uv * uScale;\n  float tOffset    = uSpeed * uTime;\n\n  tex.y += 0.03 * sin(8.0 * tex.x - tOffset);\n\n  float pattern = 0.6 +\n                  0.4 * sin(5.0 * (tex.x + tex.y +\n                                   cos(3.0 * tex.x + 5.0 * tex.y) +\n                                   0.02 * tOffset) +\n                           sin(20.0 * (tex.x + tex.y - 0.1 * tOffset)));\n\n  vec4 col = vec4(uColor, 1.0) * vec4(pattern) - rnd / 15.0 * uNoiseIntensity;\n  col.a = 1.0;\n  gl_FragColor = col;\n}\n"})]})});u.displayName="SilkPlane";let v=e=>{let{speed:n=5,scale:t=1,color:a="#7B7481",noiseIntensity:v=1.5,rotation:f=0}=e,c=(0,r.useRef)(null),m=(0,r.useMemo)(()=>({uSpeed:{value:n},uScale:{value:t},uNoiseIntensity:{value:v},uColor:{value:new l.Q1f(...s(a))},uRotation:{value:f},uTime:{value:0}}),[n,t,v,a,f]);return(0,o.jsx)(i.Hl,{dpr:[1,2],frameloop:"always",children:(0,o.jsx)(u,{ref:c,uniforms:m})})}}},e=>{var n=n=>e(e.s=n);e.O(0,[360,367,831,413,630,441,684,358],()=>n(1576)),_N_E=e.O()}]);